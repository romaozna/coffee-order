{
	"info": {
		"_postman_id": "15b0d532-6c3e-430b-a8d9-111ab812551a",
		"name": "coffee-with-me",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24127020"
	},
	"item": [
		{
			"name": "post order id 1253",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1253,\r\n    \"clientId\" : 3,\r\n    \"employeeId\" : 1,\r\n    \"expectedTime\" : \"30 min\",\r\n    \"itemId\" : 2,\r\n    \"itemPrice\" : 150,\r\n    \"createdAt\" : \"2023-09-20T18:25:43.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order 1253",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Заказ должен содержать поля id, status, events\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('status');\r",
							"pm.expect(target).to.have.property('events');\r",
							"});\r",
							"\r",
							"pm.test(\"status is correct\", () => \r",
							"  pm.expect(pm.response.json().status).to.equal(\"REGISTERED\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/orders/1253",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"1253"
					]
				}
			},
			"response": []
		},
		{
			"name": "post order id 1254",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1254,\r\n    \"clientId\" : 6,\r\n    \"employeeId\" : 1,\r\n    \"expectedTime\" : \"20 min\",\r\n    \"itemId\" : 6,\r\n    \"itemPrice\" : 110,\r\n    \"createdAt\" : \"2023-09-20T18:26:43.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "cancel order id 1254",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1254,\r\n    \"employeeId\" : 1,\r\n    \"reason\" : \"Payment declined\",\r\n    \"createdAt\" : \"2023-09-20T18:26:46.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/cancel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"cancel"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order 1254",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Заказ должен содержать поля id, status, events\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('status');\r",
							"pm.expect(target).to.have.property('events');\r",
							"});\r",
							"\r",
							"pm.test(\"status is correct\", () => \r",
							"  pm.expect(pm.response.json().status).to.equal(\"CANCELED\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/orders/1254",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"1254"
					]
				}
			},
			"response": []
		},
		{
			"name": "take order id 1254 to work after cancel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Ответ должен содержать поле error\", function () {\r",
							"pm.expect(target).to.have.property('error');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1254,\r\n    \"employeeId\" : 1,\r\n    \"createdAt\" : \"2023-09-20T18:28:43.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/in-work",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"in-work"
					]
				}
			},
			"response": []
		},
		{
			"name": "take order id 1253 to work",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1253,\r\n    \"employeeId\" : 1,\r\n    \"createdAt\" : \"2023-09-20T18:28:53.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/in-work",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"in-work"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order 1253",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Заказ должен содержать поля id, status, events\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('status');\r",
							"pm.expect(target).to.have.property('events');\r",
							"});\r",
							"\r",
							"pm.test(\"status is correct\", () => \r",
							"  pm.expect(pm.response.json().status).to.equal(\"IN_WORK\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/orders/1253",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"1253"
					]
				}
			},
			"response": []
		},
		{
			"name": "make order id 1253 to ready",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1253,\r\n    \"employeeId\" : 1,\r\n    \"createdAt\" : \"2023-09-20T18:35:43.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/ready",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"ready"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order 1253",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Заказ должен содержать поля id, status, events\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('status');\r",
							"pm.expect(target).to.have.property('events');\r",
							"});\r",
							"\r",
							"pm.test(\"status is correct\", () => \r",
							"  pm.expect(pm.response.json().status).to.equal(\"READY\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/orders/1253",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"1253"
					]
				}
			},
			"response": []
		},
		{
			"name": "issue order id 1253",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1253,\r\n    \"employeeId\" : 1,\r\n    \"createdAt\" : \"2023-09-20T18:35:43.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/issue",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"issue"
					]
				}
			},
			"response": []
		},
		{
			"name": "get order 1253",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Заказ должен содержать поля id, status, events\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('status');\r",
							"pm.expect(target).to.have.property('events');\r",
							"});\r",
							"\r",
							"pm.test(\"status is correct\", () => \r",
							"  pm.expect(pm.response.json().status).to.equal(\"ISSUED\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/orders/1253",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"orders",
						"1253"
					]
				}
			},
			"response": []
		},
		{
			"name": "cancel order id 1253 after issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 400 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(400);  \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Ответ должен содержать поле error\", function () {\r",
							"pm.expect(target).to.have.property('error');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"orderId\" : 1253,\r\n    \"employeeId\" : 1,\r\n    \"createdAt\" : \"2023-09-20T18:35:43.511Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/events/cancel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events",
						"cancel"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}